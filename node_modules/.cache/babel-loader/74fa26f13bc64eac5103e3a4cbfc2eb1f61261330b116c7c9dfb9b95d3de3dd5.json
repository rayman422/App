{"ast":null,"code":"import React,{useState,useEffect}from'react';import{scriptureData}from'./data/scriptureData';import Header from'./components/Header';import Sidebar from'./components/Sidebar';import ScriptureReader from'./components/ScriptureReader';import SearchView from'./components/SearchView';import NotesView from'./components/NotesView';import BookmarksView from'./components/BookmarksView';import ProgressView from'./components/ProgressView';import ErrorBoundary from'./components/ErrorBoundary';import{ToastContainer}from'./components/Toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const STORAGE_KEY='book-of-mormon-study-app';function App(){const[appState,setAppState]=useState({currentVolume:'bom',currentBook:'1-nephi',currentChapter:1,currentVerse:undefined,searchQuery:'',searchResults:[],userNotes:[],userHighlights:[],bookmarks:[],readingProgress:[],studySessions:[],readingPlans:[],activeReadingPlan:undefined,sidebarOpen:true,activeView:'read',showCrossReferences:true,fontSize:'medium',theme:'light'});const[toasts,setToasts]=useState([]);// Load data from localStorage on mount\nuseEffect(()=>{const saved=localStorage.getItem(STORAGE_KEY);if(saved){try{const parsedData=JSON.parse(saved);setAppState(prev=>({...prev,...parsedData}));}catch(error){console.error('Error loading saved data:',error);}}},[]);// Save data to localStorage whenever state changes\nuseEffect(()=>{const dataToSave={userNotes:appState.userNotes,userHighlights:appState.userHighlights,bookmarks:appState.bookmarks,readingProgress:appState.readingProgress,studySessions:appState.studySessions,currentBook:appState.currentBook,currentChapter:appState.currentChapter,currentVerse:appState.currentVerse};localStorage.setItem(STORAGE_KEY,JSON.stringify(dataToSave));},[appState]);const updateAppState=updates=>{setAppState(prev=>({...prev,...updates}));};const addToast=toast=>{const newToast={...toast,id:Date.now().toString()};setToasts(prev=>[...prev,newToast]);};const removeToast=id=>{setToasts(prev=>prev.filter(toast=>toast.id!==id));};const addNote=function(verseId,text){let color=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'yellow';const newNote={id:Date.now().toString(),verseId,text,color,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};updateAppState({userNotes:[...appState.userNotes,newNote]});};const updateNote=(noteId,text)=>{const updatedNotes=appState.userNotes.map(note=>note.id===noteId?{...note,text,updatedAt:new Date().toISOString()}:note);updateAppState({userNotes:updatedNotes});};const deleteNote=noteId=>{const filteredNotes=appState.userNotes.filter(note=>note.id!==noteId);updateAppState({userNotes:filteredNotes});};const addHighlight=function(verseId){let color=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'yellow';const newHighlight={id:Date.now().toString(),verseId,color,createdAt:new Date().toISOString()};updateAppState({userHighlights:[...appState.userHighlights,newHighlight]});};const removeHighlight=highlightId=>{const filteredHighlights=appState.userHighlights.filter(h=>h.id!==highlightId);updateAppState({userHighlights:filteredHighlights});};const addBookmark=(verseId,title)=>{const newBookmark={id:Date.now().toString(),verseId,title,createdAt:new Date().toISOString()};updateAppState({bookmarks:[...appState.bookmarks,newBookmark]});};const removeBookmark=bookmarkId=>{const filteredBookmarks=appState.bookmarks.filter(b=>b.id!==bookmarkId);updateAppState({bookmarks:filteredBookmarks});};const updateReadingProgress=(bookId,chapterId,verseId)=>{const existingProgress=appState.readingProgress.find(p=>p.bookId===bookId);const newProgress={bookId,chapterId,verseId,lastRead:new Date().toISOString(),completed:false};if(existingProgress){const updatedProgress=appState.readingProgress.map(p=>p.bookId===bookId?newProgress:p);updateAppState({readingProgress:updatedProgress});}else{updateAppState({readingProgress:[...appState.readingProgress,newProgress]});}};const navigateToVerse=(volumeId,bookId,chapter,verse)=>{updateAppState({currentVolume:volumeId,currentBook:bookId,currentChapter:chapter,currentVerse:verse,activeView:'read'});};const navigateToReference=(volume,book,chapter,verse)=>{// Map volume abbreviations to volume IDs\nconst volumeMap={'ot':'ot','nt':'nt','bom':'bom','dc':'dc','pogp':'pogp'};const volumeId=volumeMap[volume]||volume;const bookId=book.toLowerCase().replace(/\\s+/g,'-').replace(/&/g,'');navigateToVerse(volumeId,bookId,chapter,verse);addToast({type:'info',title:'Cross-reference opened',message:`Navigated to ${book} ${chapter}:${verse}`,duration:2000});};const renderMainContent=()=>{switch(appState.activeView){case'search':return/*#__PURE__*/_jsx(SearchView,{searchQuery:appState.searchQuery,searchResults:appState.searchResults,onSearchQueryChange:query=>updateAppState({searchQuery:query}),onSearchResultsChange:results=>updateAppState({searchResults:results}),onNavigateToVerse:(bookId,chapter,verse)=>navigateToVerse(appState.currentVolume,bookId,chapter,verse),scriptureData:scriptureData});case'notes':return/*#__PURE__*/_jsx(NotesView,{notes:appState.userNotes,onNavigateToVerse:(bookId,chapter,verse)=>navigateToVerse(appState.currentVolume,bookId,chapter,verse),onUpdateNote:updateNote,onDeleteNote:deleteNote,scriptureData:scriptureData});case'bookmarks':return/*#__PURE__*/_jsx(BookmarksView,{bookmarks:appState.bookmarks,onNavigateToVerse:(bookId,chapter,verse)=>navigateToVerse(appState.currentVolume,bookId,chapter,verse),onRemoveBookmark:removeBookmark,scriptureData:scriptureData});case'progress':return/*#__PURE__*/_jsx(ProgressView,{readingProgress:appState.readingProgress,studySessions:appState.studySessions,scriptureData:scriptureData});default:return/*#__PURE__*/_jsx(ScriptureReader,{scriptureData:scriptureData,currentVolume:appState.currentVolume,currentBook:appState.currentBook,currentChapter:appState.currentChapter,currentVerse:appState.currentVerse,userNotes:appState.userNotes,userHighlights:appState.userHighlights,showCrossReferences:appState.showCrossReferences,onNavigateToVerse:(volumeId,bookId,chapter,verse)=>navigateToVerse(volumeId,bookId,chapter,verse),onNavigateToReference:navigateToReference,onAddNote:addNote,onAddHighlight:addHighlight,onRemoveHighlight:removeHighlight,onAddBookmark:addBookmark,onUpdateReadingProgress:updateReadingProgress,onAddToast:addToast});}};return/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col\",children:[/*#__PURE__*/_jsx(Header,{activeView:appState.activeView,onViewChange:view=>updateAppState({activeView:view}),onToggleSidebar:()=>updateAppState({sidebarOpen:!appState.sidebarOpen}),sidebarOpen:appState.sidebarOpen}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-1 overflow-hidden\",children:[appState.sidebarOpen&&/*#__PURE__*/_jsx(Sidebar,{scriptureData:scriptureData,currentVolume:appState.currentVolume,currentBook:appState.currentBook,currentChapter:appState.currentChapter,onNavigateToVerse:(volumeId,bookId,chapter,verse)=>navigateToVerse(volumeId,bookId,chapter,verse),activeView:appState.activeView,readingProgress:appState.readingProgress}),/*#__PURE__*/_jsx(\"main\",{className:\"flex-1 overflow-auto\",children:renderMainContent()})]}),/*#__PURE__*/_jsx(ToastContainer,{toasts:toasts,onRemoveToast:removeToast})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","scriptureData","Header","Sidebar","ScriptureReader","SearchView","NotesView","BookmarksView","ProgressView","ErrorBoundary","ToastContainer","jsx","_jsx","jsxs","_jsxs","STORAGE_KEY","App","appState","setAppState","currentVolume","currentBook","currentChapter","currentVerse","undefined","searchQuery","searchResults","userNotes","userHighlights","bookmarks","readingProgress","studySessions","readingPlans","activeReadingPlan","sidebarOpen","activeView","showCrossReferences","fontSize","theme","toasts","setToasts","saved","localStorage","getItem","parsedData","JSON","parse","prev","error","console","dataToSave","setItem","stringify","updateAppState","updates","addToast","toast","newToast","id","Date","now","toString","removeToast","filter","addNote","verseId","text","color","arguments","length","newNote","createdAt","toISOString","updatedAt","updateNote","noteId","updatedNotes","map","note","deleteNote","filteredNotes","addHighlight","newHighlight","removeHighlight","highlightId","filteredHighlights","h","addBookmark","title","newBookmark","removeBookmark","bookmarkId","filteredBookmarks","b","updateReadingProgress","bookId","chapterId","existingProgress","find","p","newProgress","lastRead","completed","updatedProgress","navigateToVerse","volumeId","chapter","verse","navigateToReference","volume","book","volumeMap","toLowerCase","replace","type","message","duration","renderMainContent","onSearchQueryChange","query","onSearchResultsChange","results","onNavigateToVerse","notes","onUpdateNote","onDeleteNote","onRemoveBookmark","onNavigateToReference","onAddNote","onAddHighlight","onRemoveHighlight","onAddBookmark","onUpdateReadingProgress","onAddToast","children","className","onViewChange","view","onToggleSidebar","onRemoveToast"],"sources":["/workspace/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AppState, UserNote, UserHighlight, Bookmark, ReadingProgress } from './types';\nimport { scriptureData } from './data/scriptureData';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport ScriptureReader from './components/ScriptureReader';\nimport SearchView from './components/SearchView';\nimport NotesView from './components/NotesView';\nimport BookmarksView from './components/BookmarksView';\nimport ProgressView from './components/ProgressView';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { ToastContainer, ToastData } from './components/Toast';\n\nconst STORAGE_KEY = 'book-of-mormon-study-app';\n\nfunction App() {\n  const [appState, setAppState] = useState<AppState>({\n    currentVolume: 'bom',\n    currentBook: '1-nephi',\n    currentChapter: 1,\n    currentVerse: undefined,\n    searchQuery: '',\n    searchResults: [],\n    userNotes: [],\n    userHighlights: [],\n    bookmarks: [],\n    readingProgress: [],\n    studySessions: [],\n    readingPlans: [],\n    activeReadingPlan: undefined,\n    sidebarOpen: true,\n    activeView: 'read',\n    showCrossReferences: true,\n    fontSize: 'medium',\n    theme: 'light'\n  });\n\n  const [toasts, setToasts] = useState<ToastData[]>([]);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const parsedData = JSON.parse(saved);\n        setAppState(prev => ({ ...prev, ...parsedData }));\n      } catch (error) {\n        console.error('Error loading saved data:', error);\n      }\n    }\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    const dataToSave = {\n      userNotes: appState.userNotes,\n      userHighlights: appState.userHighlights,\n      bookmarks: appState.bookmarks,\n      readingProgress: appState.readingProgress,\n      studySessions: appState.studySessions,\n      currentBook: appState.currentBook,\n      currentChapter: appState.currentChapter,\n      currentVerse: appState.currentVerse\n    };\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n  }, [appState]);\n\n  const updateAppState = (updates: Partial<AppState>) => {\n    setAppState(prev => ({ ...prev, ...updates }));\n  };\n\n  const addToast = (toast: Omit<ToastData, 'id'>) => {\n    const newToast: ToastData = {\n      ...toast,\n      id: Date.now().toString()\n    };\n    setToasts(prev => [...prev, newToast]);\n  };\n\n  const removeToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  const addNote = (verseId: string, text: string, color: string = 'yellow') => {\n    const newNote: UserNote = {\n      id: Date.now().toString(),\n      verseId,\n      text,\n      color,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    updateAppState({ userNotes: [...appState.userNotes, newNote] });\n  };\n\n  const updateNote = (noteId: string, text: string) => {\n    const updatedNotes = appState.userNotes.map(note => \n      note.id === noteId \n        ? { ...note, text, updatedAt: new Date().toISOString() }\n        : note\n    );\n    updateAppState({ userNotes: updatedNotes });\n  };\n\n  const deleteNote = (noteId: string) => {\n    const filteredNotes = appState.userNotes.filter(note => note.id !== noteId);\n    updateAppState({ userNotes: filteredNotes });\n  };\n\n  const addHighlight = (verseId: string, color: string = 'yellow') => {\n    const newHighlight: UserHighlight = {\n      id: Date.now().toString(),\n      verseId,\n      color,\n      createdAt: new Date().toISOString()\n    };\n    updateAppState({ userHighlights: [...appState.userHighlights, newHighlight] });\n  };\n\n  const removeHighlight = (highlightId: string) => {\n    const filteredHighlights = appState.userHighlights.filter(h => h.id !== highlightId);\n    updateAppState({ userHighlights: filteredHighlights });\n  };\n\n  const addBookmark = (verseId: string, title: string) => {\n    const newBookmark: Bookmark = {\n      id: Date.now().toString(),\n      verseId,\n      title,\n      createdAt: new Date().toISOString()\n    };\n    updateAppState({ bookmarks: [...appState.bookmarks, newBookmark] });\n  };\n\n  const removeBookmark = (bookmarkId: string) => {\n    const filteredBookmarks = appState.bookmarks.filter(b => b.id !== bookmarkId);\n    updateAppState({ bookmarks: filteredBookmarks });\n  };\n\n  const updateReadingProgress = (bookId: string, chapterId: string, verseId: string) => {\n    const existingProgress = appState.readingProgress.find(p => p.bookId === bookId);\n    const newProgress: ReadingProgress = {\n      bookId,\n      chapterId,\n      verseId,\n      lastRead: new Date().toISOString(),\n      completed: false\n    };\n\n    if (existingProgress) {\n      const updatedProgress = appState.readingProgress.map(p => \n        p.bookId === bookId ? newProgress : p\n      );\n      updateAppState({ readingProgress: updatedProgress });\n    } else {\n      updateAppState({ readingProgress: [...appState.readingProgress, newProgress] });\n    }\n  };\n\n  const navigateToVerse = (volumeId: string, bookId: string, chapter: number, verse?: number) => {\n    updateAppState({\n      currentVolume: volumeId,\n      currentBook: bookId,\n      currentChapter: chapter,\n      currentVerse: verse,\n      activeView: 'read'\n    });\n  };\n\n  const navigateToReference = (volume: string, book: string, chapter: number, verse: number) => {\n    // Map volume abbreviations to volume IDs\n    const volumeMap: { [key: string]: string } = {\n      'ot': 'ot',\n      'nt': 'nt',\n      'bom': 'bom',\n      'dc': 'dc',\n      'pogp': 'pogp'\n    };\n    \n    const volumeId = volumeMap[volume] || volume;\n    const bookId = book.toLowerCase().replace(/\\s+/g, '-').replace(/&/g, '');\n    \n    navigateToVerse(volumeId, bookId, chapter, verse);\n    \n    addToast({\n      type: 'info',\n      title: 'Cross-reference opened',\n      message: `Navigated to ${book} ${chapter}:${verse}`,\n      duration: 2000\n    });\n  };\n\n  const renderMainContent = () => {\n    switch (appState.activeView) {\n      case 'search':\n        return (\n          <SearchView\n            searchQuery={appState.searchQuery}\n            searchResults={appState.searchResults}\n            onSearchQueryChange={(query) => updateAppState({ searchQuery: query })}\n            onSearchResultsChange={(results) => updateAppState({ searchResults: results })}\n            onNavigateToVerse={(bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse)}\n            scriptureData={scriptureData}\n          />\n        );\n              case 'notes':\n          return (\n            <NotesView\n              notes={appState.userNotes}\n              onNavigateToVerse={(bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse)}\n              onUpdateNote={updateNote}\n              onDeleteNote={deleteNote}\n              scriptureData={scriptureData}\n            />\n          );\n        case 'bookmarks':\n          return (\n            <BookmarksView\n              bookmarks={appState.bookmarks}\n              onNavigateToVerse={(bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse)}\n              onRemoveBookmark={removeBookmark}\n              scriptureData={scriptureData}\n            />\n          );\n        case 'progress':\n          return (\n            <ProgressView\n              readingProgress={appState.readingProgress}\n              studySessions={appState.studySessions}\n              scriptureData={scriptureData}\n            />\n          );\n              default:\n          return (\n            <ScriptureReader\n              scriptureData={scriptureData}\n              currentVolume={appState.currentVolume}\n              currentBook={appState.currentBook}\n              currentChapter={appState.currentChapter}\n              currentVerse={appState.currentVerse}\n              userNotes={appState.userNotes}\n              userHighlights={appState.userHighlights}\n              showCrossReferences={appState.showCrossReferences}\n              onNavigateToVerse={(volumeId, bookId, chapter, verse) => navigateToVerse(volumeId, bookId, chapter, verse)}\n              onNavigateToReference={navigateToReference}\n              onAddNote={addNote}\n              onAddHighlight={addHighlight}\n              onRemoveHighlight={removeHighlight}\n              onAddBookmark={addBookmark}\n              onUpdateReadingProgress={updateReadingProgress}\n              onAddToast={addToast}\n            />\n          );\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"h-screen flex flex-col\">\n        <Header\n          activeView={appState.activeView}\n          onViewChange={(view) => updateAppState({ activeView: view })}\n          onToggleSidebar={() => updateAppState({ sidebarOpen: !appState.sidebarOpen })}\n          sidebarOpen={appState.sidebarOpen}\n        />\n        \n        <div className=\"flex flex-1 overflow-hidden\">\n          {appState.sidebarOpen && (\n            <Sidebar\n              scriptureData={scriptureData}\n              currentVolume={appState.currentVolume}\n              currentBook={appState.currentBook}\n              currentChapter={appState.currentChapter}\n              onNavigateToVerse={(volumeId, bookId, chapter, verse) => navigateToVerse(volumeId, bookId, chapter, verse)}\n              activeView={appState.activeView}\n              readingProgress={appState.readingProgress}\n            />\n          )}\n          \n          <main className=\"flex-1 overflow-auto\">\n            {renderMainContent()}\n          </main>\n        </div>\n        \n        <ToastContainer\n          toasts={toasts}\n          onRemoveToast={removeToast}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}