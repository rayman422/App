{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { scriptureData } from './data/scriptureData';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport ScriptureReader from './components/ScriptureReader';\nimport SearchView from './components/SearchView';\nimport NotesView from './components/NotesView';\nimport BookmarksView from './components/BookmarksView';\nimport ProgressView from './components/ProgressView';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { ToastContainer } from './components/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'book-of-mormon-study-app';\nfunction App() {\n  _s();\n  const [appState, setAppState] = useState({\n    currentVolume: 'bom',\n    currentBook: '1-nephi',\n    currentChapter: 1,\n    currentVerse: undefined,\n    searchQuery: '',\n    searchResults: [],\n    userNotes: [],\n    userHighlights: [],\n    bookmarks: [],\n    readingProgress: [],\n    studySessions: [],\n    readingPlans: [],\n    activeReadingPlan: undefined,\n    sidebarOpen: true,\n    activeView: 'read',\n    showCrossReferences: true,\n    fontSize: 'medium',\n    theme: 'light'\n  });\n  const [toasts, setToasts] = useState([]);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const parsedData = JSON.parse(saved);\n        setAppState(prev => ({\n          ...prev,\n          ...parsedData\n        }));\n      } catch (error) {\n        console.error('Error loading saved data:', error);\n      }\n    }\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    const dataToSave = {\n      userNotes: appState.userNotes,\n      userHighlights: appState.userHighlights,\n      bookmarks: appState.bookmarks,\n      readingProgress: appState.readingProgress,\n      studySessions: appState.studySessions,\n      currentBook: appState.currentBook,\n      currentChapter: appState.currentChapter,\n      currentVerse: appState.currentVerse\n    };\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n  }, [appState]);\n  const updateAppState = updates => {\n    setAppState(prev => ({\n      ...prev,\n      ...updates\n    }));\n  };\n  const addToast = toast => {\n    const newToast = {\n      ...toast,\n      id: Date.now().toString()\n    };\n    setToasts(prev => [...prev, newToast]);\n  };\n  const removeToast = id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n  const addNote = (verseId, text, color = 'yellow') => {\n    const newNote = {\n      id: Date.now().toString(),\n      verseId,\n      text,\n      color,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    updateAppState({\n      userNotes: [...appState.userNotes, newNote]\n    });\n  };\n  const updateNote = (noteId, text) => {\n    const updatedNotes = appState.userNotes.map(note => note.id === noteId ? {\n      ...note,\n      text,\n      updatedAt: new Date().toISOString()\n    } : note);\n    updateAppState({\n      userNotes: updatedNotes\n    });\n  };\n  const deleteNote = noteId => {\n    const filteredNotes = appState.userNotes.filter(note => note.id !== noteId);\n    updateAppState({\n      userNotes: filteredNotes\n    });\n  };\n  const addHighlight = (verseId, color = 'yellow') => {\n    const newHighlight = {\n      id: Date.now().toString(),\n      verseId,\n      color,\n      createdAt: new Date().toISOString()\n    };\n    updateAppState({\n      userHighlights: [...appState.userHighlights, newHighlight]\n    });\n  };\n  const removeHighlight = highlightId => {\n    const filteredHighlights = appState.userHighlights.filter(h => h.id !== highlightId);\n    updateAppState({\n      userHighlights: filteredHighlights\n    });\n  };\n  const addBookmark = (verseId, title) => {\n    const newBookmark = {\n      id: Date.now().toString(),\n      verseId,\n      title,\n      createdAt: new Date().toISOString()\n    };\n    updateAppState({\n      bookmarks: [...appState.bookmarks, newBookmark]\n    });\n  };\n  const removeBookmark = bookmarkId => {\n    const filteredBookmarks = appState.bookmarks.filter(b => b.id !== bookmarkId);\n    updateAppState({\n      bookmarks: filteredBookmarks\n    });\n  };\n  const updateReadingProgress = (bookId, chapterId, verseId) => {\n    const existingProgress = appState.readingProgress.find(p => p.bookId === bookId);\n    const newProgress = {\n      bookId,\n      chapterId,\n      verseId,\n      lastRead: new Date().toISOString(),\n      completed: false\n    };\n    if (existingProgress) {\n      const updatedProgress = appState.readingProgress.map(p => p.bookId === bookId ? newProgress : p);\n      updateAppState({\n        readingProgress: updatedProgress\n      });\n    } else {\n      updateAppState({\n        readingProgress: [...appState.readingProgress, newProgress]\n      });\n    }\n  };\n  const navigateToVerse = (volumeId, bookId, chapter, verse) => {\n    updateAppState({\n      currentVolume: volumeId,\n      currentBook: bookId,\n      currentChapter: chapter,\n      currentVerse: verse,\n      activeView: 'read'\n    });\n  };\n  const navigateToReference = (volume, book, chapter, verse) => {\n    // Map volume abbreviations to volume IDs\n    const volumeMap = {\n      'ot': 'ot',\n      'nt': 'nt',\n      'bom': 'bom',\n      'dc': 'dc',\n      'pogp': 'pogp'\n    };\n    const volumeId = volumeMap[volume] || volume;\n    const bookId = book.toLowerCase().replace(/\\s+/g, '-').replace(/&/g, '');\n    navigateToVerse(volumeId, bookId, chapter, verse);\n    addToast({\n      type: 'info',\n      title: 'Cross-reference opened',\n      message: `Navigated to ${book} ${chapter}:${verse}`,\n      duration: 2000\n    });\n  };\n  const renderMainContent = () => {\n    switch (appState.activeView) {\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(SearchView, {\n          searchQuery: appState.searchQuery,\n          searchResults: appState.searchResults,\n          onSearchQueryChange: query => updateAppState({\n            searchQuery: query\n          }),\n          onSearchResultsChange: results => updateAppState({\n            searchResults: results\n          }),\n          onNavigateToVerse: (bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse),\n          scriptureData: scriptureData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this);\n      case 'notes':\n        return /*#__PURE__*/_jsxDEV(NotesView, {\n          notes: appState.userNotes,\n          onNavigateToVerse: (bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse),\n          onUpdateNote: updateNote,\n          onDeleteNote: deleteNote,\n          scriptureData: scriptureData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this);\n      case 'bookmarks':\n        return /*#__PURE__*/_jsxDEV(BookmarksView, {\n          bookmarks: appState.bookmarks,\n          onNavigateToVerse: (bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse),\n          onRemoveBookmark: removeBookmark,\n          scriptureData: scriptureData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this);\n      case 'progress':\n        return /*#__PURE__*/_jsxDEV(ProgressView, {\n          readingProgress: appState.readingProgress,\n          studySessions: appState.studySessions,\n          scriptureData: scriptureData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(ScriptureReader, {\n          scriptureData: scriptureData,\n          currentVolume: appState.currentVolume,\n          currentBook: appState.currentBook,\n          currentChapter: appState.currentChapter,\n          currentVerse: appState.currentVerse,\n          userNotes: appState.userNotes,\n          userHighlights: appState.userHighlights,\n          showCrossReferences: appState.showCrossReferences,\n          onNavigateToVerse: (volumeId, bookId, chapter, verse) => navigateToVerse(volumeId, bookId, chapter, verse),\n          onNavigateToReference: navigateToReference,\n          onAddNote: addNote,\n          onAddHighlight: addHighlight,\n          onRemoveHighlight: removeHighlight,\n          onAddBookmark: addBookmark,\n          onUpdateReadingProgress: updateReadingProgress,\n          onAddToast: addToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        activeView: appState.activeView,\n        onViewChange: view => updateAppState({\n          activeView: view\n        }),\n        onToggleSidebar: () => updateAppState({\n          sidebarOpen: !appState.sidebarOpen\n        }),\n        sidebarOpen: appState.sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1 overflow-hidden\",\n        children: [appState.sidebarOpen && /*#__PURE__*/_jsxDEV(Sidebar, {\n          scriptureData: scriptureData,\n          currentVolume: appState.currentVolume,\n          currentBook: appState.currentBook,\n          currentChapter: appState.currentChapter,\n          onNavigateToVerse: (volumeId, bookId, chapter, verse) => navigateToVerse(volumeId, bookId, chapter, verse),\n          activeView: appState.activeView,\n          readingProgress: appState.readingProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"flex-1 overflow-auto\",\n          children: renderMainContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        toasts: toasts,\n        onRemoveToast: removeToast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hnRCfOACCo+RZC3UP6R/9nThq6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","scriptureData","Header","Sidebar","ScriptureReader","SearchView","NotesView","BookmarksView","ProgressView","ErrorBoundary","ToastContainer","jsxDEV","_jsxDEV","STORAGE_KEY","App","_s","appState","setAppState","currentVolume","currentBook","currentChapter","currentVerse","undefined","searchQuery","searchResults","userNotes","userHighlights","bookmarks","readingProgress","studySessions","readingPlans","activeReadingPlan","sidebarOpen","activeView","showCrossReferences","fontSize","theme","toasts","setToasts","saved","localStorage","getItem","parsedData","JSON","parse","prev","error","console","dataToSave","setItem","stringify","updateAppState","updates","addToast","toast","newToast","id","Date","now","toString","removeToast","filter","addNote","verseId","text","color","newNote","createdAt","toISOString","updatedAt","updateNote","noteId","updatedNotes","map","note","deleteNote","filteredNotes","addHighlight","newHighlight","removeHighlight","highlightId","filteredHighlights","h","addBookmark","title","newBookmark","removeBookmark","bookmarkId","filteredBookmarks","b","updateReadingProgress","bookId","chapterId","existingProgress","find","p","newProgress","lastRead","completed","updatedProgress","navigateToVerse","volumeId","chapter","verse","navigateToReference","volume","book","volumeMap","toLowerCase","replace","type","message","duration","renderMainContent","onSearchQueryChange","query","onSearchResultsChange","results","onNavigateToVerse","fileName","_jsxFileName","lineNumber","columnNumber","notes","onUpdateNote","onDeleteNote","onRemoveBookmark","onNavigateToReference","onAddNote","onAddHighlight","onRemoveHighlight","onAddBookmark","onUpdateReadingProgress","onAddToast","children","className","onViewChange","view","onToggleSidebar","onRemoveToast","_c","$RefreshReg$"],"sources":["/workspace/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AppState, UserNote, UserHighlight, Bookmark, ReadingProgress } from './types';\nimport { scriptureData } from './data/scriptureData';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport ScriptureReader from './components/ScriptureReader';\nimport SearchView from './components/SearchView';\nimport NotesView from './components/NotesView';\nimport BookmarksView from './components/BookmarksView';\nimport ProgressView from './components/ProgressView';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { ToastContainer, ToastData } from './components/Toast';\n\nconst STORAGE_KEY = 'book-of-mormon-study-app';\n\nfunction App() {\n  const [appState, setAppState] = useState<AppState>({\n    currentVolume: 'bom',\n    currentBook: '1-nephi',\n    currentChapter: 1,\n    currentVerse: undefined,\n    searchQuery: '',\n    searchResults: [],\n    userNotes: [],\n    userHighlights: [],\n    bookmarks: [],\n    readingProgress: [],\n    studySessions: [],\n    readingPlans: [],\n    activeReadingPlan: undefined,\n    sidebarOpen: true,\n    activeView: 'read',\n    showCrossReferences: true,\n    fontSize: 'medium',\n    theme: 'light'\n  });\n\n  const [toasts, setToasts] = useState<ToastData[]>([]);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const parsedData = JSON.parse(saved);\n        setAppState(prev => ({ ...prev, ...parsedData }));\n      } catch (error) {\n        console.error('Error loading saved data:', error);\n      }\n    }\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    const dataToSave = {\n      userNotes: appState.userNotes,\n      userHighlights: appState.userHighlights,\n      bookmarks: appState.bookmarks,\n      readingProgress: appState.readingProgress,\n      studySessions: appState.studySessions,\n      currentBook: appState.currentBook,\n      currentChapter: appState.currentChapter,\n      currentVerse: appState.currentVerse\n    };\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n  }, [appState]);\n\n  const updateAppState = (updates: Partial<AppState>) => {\n    setAppState(prev => ({ ...prev, ...updates }));\n  };\n\n  const addToast = (toast: Omit<ToastData, 'id'>) => {\n    const newToast: ToastData = {\n      ...toast,\n      id: Date.now().toString()\n    };\n    setToasts(prev => [...prev, newToast]);\n  };\n\n  const removeToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  const addNote = (verseId: string, text: string, color: string = 'yellow') => {\n    const newNote: UserNote = {\n      id: Date.now().toString(),\n      verseId,\n      text,\n      color,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    updateAppState({ userNotes: [...appState.userNotes, newNote] });\n  };\n\n  const updateNote = (noteId: string, text: string) => {\n    const updatedNotes = appState.userNotes.map(note => \n      note.id === noteId \n        ? { ...note, text, updatedAt: new Date().toISOString() }\n        : note\n    );\n    updateAppState({ userNotes: updatedNotes });\n  };\n\n  const deleteNote = (noteId: string) => {\n    const filteredNotes = appState.userNotes.filter(note => note.id !== noteId);\n    updateAppState({ userNotes: filteredNotes });\n  };\n\n  const addHighlight = (verseId: string, color: string = 'yellow') => {\n    const newHighlight: UserHighlight = {\n      id: Date.now().toString(),\n      verseId,\n      color,\n      createdAt: new Date().toISOString()\n    };\n    updateAppState({ userHighlights: [...appState.userHighlights, newHighlight] });\n  };\n\n  const removeHighlight = (highlightId: string) => {\n    const filteredHighlights = appState.userHighlights.filter(h => h.id !== highlightId);\n    updateAppState({ userHighlights: filteredHighlights });\n  };\n\n  const addBookmark = (verseId: string, title: string) => {\n    const newBookmark: Bookmark = {\n      id: Date.now().toString(),\n      verseId,\n      title,\n      createdAt: new Date().toISOString()\n    };\n    updateAppState({ bookmarks: [...appState.bookmarks, newBookmark] });\n  };\n\n  const removeBookmark = (bookmarkId: string) => {\n    const filteredBookmarks = appState.bookmarks.filter(b => b.id !== bookmarkId);\n    updateAppState({ bookmarks: filteredBookmarks });\n  };\n\n  const updateReadingProgress = (bookId: string, chapterId: string, verseId: string) => {\n    const existingProgress = appState.readingProgress.find(p => p.bookId === bookId);\n    const newProgress: ReadingProgress = {\n      bookId,\n      chapterId,\n      verseId,\n      lastRead: new Date().toISOString(),\n      completed: false\n    };\n\n    if (existingProgress) {\n      const updatedProgress = appState.readingProgress.map(p => \n        p.bookId === bookId ? newProgress : p\n      );\n      updateAppState({ readingProgress: updatedProgress });\n    } else {\n      updateAppState({ readingProgress: [...appState.readingProgress, newProgress] });\n    }\n  };\n\n  const navigateToVerse = (volumeId: string, bookId: string, chapter: number, verse?: number) => {\n    updateAppState({\n      currentVolume: volumeId,\n      currentBook: bookId,\n      currentChapter: chapter,\n      currentVerse: verse,\n      activeView: 'read'\n    });\n  };\n\n  const navigateToReference = (volume: string, book: string, chapter: number, verse: number) => {\n    // Map volume abbreviations to volume IDs\n    const volumeMap: { [key: string]: string } = {\n      'ot': 'ot',\n      'nt': 'nt',\n      'bom': 'bom',\n      'dc': 'dc',\n      'pogp': 'pogp'\n    };\n    \n    const volumeId = volumeMap[volume] || volume;\n    const bookId = book.toLowerCase().replace(/\\s+/g, '-').replace(/&/g, '');\n    \n    navigateToVerse(volumeId, bookId, chapter, verse);\n    \n    addToast({\n      type: 'info',\n      title: 'Cross-reference opened',\n      message: `Navigated to ${book} ${chapter}:${verse}`,\n      duration: 2000\n    });\n  };\n\n  const renderMainContent = () => {\n    switch (appState.activeView) {\n      case 'search':\n        return (\n          <SearchView\n            searchQuery={appState.searchQuery}\n            searchResults={appState.searchResults}\n            onSearchQueryChange={(query) => updateAppState({ searchQuery: query })}\n            onSearchResultsChange={(results) => updateAppState({ searchResults: results })}\n            onNavigateToVerse={(bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse)}\n            scriptureData={scriptureData}\n          />\n        );\n              case 'notes':\n          return (\n            <NotesView\n              notes={appState.userNotes}\n              onNavigateToVerse={(bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse)}\n              onUpdateNote={updateNote}\n              onDeleteNote={deleteNote}\n              scriptureData={scriptureData}\n            />\n          );\n        case 'bookmarks':\n          return (\n            <BookmarksView\n              bookmarks={appState.bookmarks}\n              onNavigateToVerse={(bookId, chapter, verse) => navigateToVerse(appState.currentVolume, bookId, chapter, verse)}\n              onRemoveBookmark={removeBookmark}\n              scriptureData={scriptureData}\n            />\n          );\n        case 'progress':\n          return (\n            <ProgressView\n              readingProgress={appState.readingProgress}\n              studySessions={appState.studySessions}\n              scriptureData={scriptureData}\n            />\n          );\n              default:\n          return (\n            <ScriptureReader\n              scriptureData={scriptureData}\n              currentVolume={appState.currentVolume}\n              currentBook={appState.currentBook}\n              currentChapter={appState.currentChapter}\n              currentVerse={appState.currentVerse}\n              userNotes={appState.userNotes}\n              userHighlights={appState.userHighlights}\n              showCrossReferences={appState.showCrossReferences}\n              onNavigateToVerse={(volumeId, bookId, chapter, verse) => navigateToVerse(volumeId, bookId, chapter, verse)}\n              onNavigateToReference={navigateToReference}\n              onAddNote={addNote}\n              onAddHighlight={addHighlight}\n              onRemoveHighlight={removeHighlight}\n              onAddBookmark={addBookmark}\n              onUpdateReadingProgress={updateReadingProgress}\n              onAddToast={addToast}\n            />\n          );\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"h-screen flex flex-col\">\n        <Header\n          activeView={appState.activeView}\n          onViewChange={(view) => updateAppState({ activeView: view })}\n          onToggleSidebar={() => updateAppState({ sidebarOpen: !appState.sidebarOpen })}\n          sidebarOpen={appState.sidebarOpen}\n        />\n        \n        <div className=\"flex flex-1 overflow-hidden\">\n          {appState.sidebarOpen && (\n            <Sidebar\n              scriptureData={scriptureData}\n              currentVolume={appState.currentVolume}\n              currentBook={appState.currentBook}\n              currentChapter={appState.currentChapter}\n              onNavigateToVerse={(volumeId, bookId, chapter, verse) => navigateToVerse(volumeId, bookId, chapter, verse)}\n              activeView={appState.activeView}\n              readingProgress={appState.readingProgress}\n            />\n          )}\n          \n          <main className=\"flex-1 overflow-auto\">\n            {renderMainContent()}\n          </main>\n        </div>\n        \n        <ToastContainer\n          toasts={toasts}\n          onRemoveToast={removeToast}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}